/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Title = string;
export type Subtitle = string;
export type Label = string;
/**
 * The unit of the values. e.g. Â°C or km/h
 */
export type Unit = string;
/**
 * This should be an ISO String date like 2023-11-04T22:47:52.351152+00:00. Will only be used to detect data age of data.
 */
export type Timestamp = string;
export type Value = number;
/**
 * You can specify a table column to autogenerate dataseries for each distinct entry in this column. E.g. if you have a table with columns [city, timestamp, temperature] and specify ''city'' as split column, then you will get a gauge for each city.
 */
export type SplitDataBy = string;
/**
 * The data used to draw this gauge.
 */
export type Data = {
  tsp?: Timestamp;
  value?: Value;
  pivot?: SplitDataBy;
  [k: string]: unknown;
}[];
/**
 * The limits of the gauge sections. Starting from the min value, ending with the max value.
 */
export type SectionLimits = number[];
/**
 * Background color for each section. This Array is one shorter than the number of sections.
 */
export type SectionBackgroundColors = {
  [k: string]: unknown;
}[];
/**
 * Calculate the average over the given number of newest values. (If you use 'split by', then per each of the split dataseries.) If not specified then the latest value is shown without modification.
 */
export type AverageLatestValues = number;
/**
 * If you provide timestamp data, the delivered value is only shown in the gauge when the age of the data is not older than the given maximum Latency in seconds.
 */
export type MaximumLatency = number;
export type Gauges = {
  label?: Label;
  valueColor?: ValueColor;
  unit?: Unit;
  data?: Data;
  sections?: GaugeColorSections;
  advanced?: AdvancedConfiguration;
  [k: string]: unknown;
}[];

export interface GaugeChartConfiguration {
  title?: Title;
  subTitle?: Subtitle;
  dataseries?: Gauges;
  [k: string]: unknown;
}
export interface ValueColor {
  [k: string]: unknown;
}
export interface GaugeColorSections {
  sectionLimits?: SectionLimits;
  backgroundColors?: SectionBackgroundColors;
  [k: string]: unknown;
}
export interface AdvancedConfiguration {
  averageLatest?: AverageLatestValues;
  maxLatency?: MaximumLatency;
  [k: string]: unknown;
}
